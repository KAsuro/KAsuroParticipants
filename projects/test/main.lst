   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.startup.main,"ax",@progbits
  11               	.global	main
  13               	main:
  14               	.LFB2:
  15               		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        ****  * Beschreibt hier was euer Programm macht!
   3:main.c        ****  */
   4:main.c        **** #include <asuro/asuro.h>
   5:main.c        **** 
   6:main.c        **** void main(void) {
  16               		.loc 1 6 0
  17               		.cfi_startproc
  18 0000 CF93      		push r28	 ;  119	pushqi1/1	[length = 1]
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29	 ;  120	pushqi1/1	[length = 1]
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26               		 ; SP -= 4	 ;  124	*addhi3_sp	[length = 2]
  27 0004 00D0      		rcall .
  28 0006 00D0      		rcall .
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 8
  31 0008 CDB7      		in r28,__SP_L__	 ;  125	*movhi/8	[length = 2]
  32 000a DEB7      		in r29,__SP_H__
  33               	.LCFI3:
  34               		.cfi_def_cfa_register 28
  35               	/* prologue: function */
  36               	/* frame size = 4 */
  37               	/* stack size = 6 */
  38               	.L__stack_usage = 6
  39               	.LVL0:
   7:main.c        **** 	int white[] = {0, 0};
   8:main.c        **** 	int black[] = {0, 0};
   9:main.c        **** 	uint16_t data[]  = {0, 0};
  40               		.loc 1 9 0
  41 000c 1A82      		std Y+2,__zero_reg__	 ;  11	*movhi/4	[length = 2]
  42 000e 1982      		std Y+1,__zero_reg__
  43 0010 1C82      		std Y+4,__zero_reg__	 ;  12	*movhi/4	[length = 2]
  44 0012 1B82      		std Y+3,__zero_reg__
  10:main.c        **** 
  11:main.c        ****     Init();
  45               		.loc 1 11 0
  46 0014 00D0      		rcall Init	 ;  13	call_insn/2	[length = 1]
  47               	.LVL1:
  12:main.c        ****     
  13:main.c        ****     MotorDir(FWD,FWD);
  48               		.loc 1 13 0
  49 0016 60E2      		ldi r22,lo8(32)	 ;  14	movqi_insn/2	[length = 1]
  50 0018 80E2      		ldi r24,lo8(32)	 ;  15	movqi_insn/2	[length = 1]
  51 001a 00D0      		rcall MotorDir	 ;  16	call_insn/2	[length = 1]
  52               	.LVL2:
  14:main.c        ****     MotorSpeed(80,80);
  53               		.loc 1 14 0
  54 001c 60E5      		ldi r22,lo8(80)	 ;  17	movqi_insn/2	[length = 1]
  55 001e 80E5      		ldi r24,lo8(80)	 ;  18	movqi_insn/2	[length = 1]
  56 0020 00D0      		rcall MotorSpeed	 ;  19	call_insn/2	[length = 1]
  57               	.LVL3:
  58               	.L6:
  59               	.LBB2:
  15:main.c        ****     
  16:main.c        ****     
  17:main.c        ****     while (1) {
  18:main.c        **** 		char switches = PollSwitch();
  60               		.loc 1 18 0
  61 0022 00D0      		rcall PollSwitch	 ;  23	call_value_insn/2	[length = 1]
  62               	.LVL4:
  63 0024 182F      		mov r17,r24	 ;  24	movqi_insn/1	[length = 1]
  64               	.LVL5:
  19:main.c        **** 		int start_white = 0;
  20:main.c        **** 		int start_black = 0;
  21:main.c        **** 		
  22:main.c        **** 		switches &= 0b00111111;
  23:main.c        **** 		
  24:main.c        **** 		LineData(data);
  65               		.loc 1 24 0
  66 0026 CE01      		movw r24,r28	 ;  116	*movhi/1	[length = 1]
  67 0028 0196      		adiw r24,1	 ;  103	*addhi3/3	[length = 1]
  68 002a 00D0      		rcall LineData	 ;  30	call_insn/2	[length = 1]
  69               	.LVL6:
  22:main.c        **** 		
  70               		.loc 1 22 0
  71 002c 812F      		mov r24,r17	 ;  117	movqi_insn/1	[length = 1]
  72 002e 8F73      		andi r24,lo8(63)	 ;  32	andqi3/2	[length = 1]
  73               	.LVL7:
  25:main.c        **** 		if(!start_white) {
  26:main.c        **** 			if (switches >= 64) {
  27:main.c        **** 				LineData(data);
  28:main.c        **** 				white[RIGHT] = data[RIGHT];
  29:main.c        **** 				white[LEFT] = data[LEFT];
  30:main.c        **** 				start_white = 1;
  31:main.c        **** 			}
  32:main.c        **** 		}
  33:main.c        **** 		
  34:main.c        **** 		if(!start_black) {
  35:main.c        **** 			if ((switches >= 16) && (switches < 64)) {
  74               		.loc 1 35 0
  75 0030 8051      		subi r24,lo8(-(-16))	 ;  33	addqi3/2	[length = 1]
  76               	.LVL8:
  77 0032 8033      		cpi r24,lo8(48)	 ;  34	*cmpqi/3	[length = 1]
  78 0034 00F4      		brsh .L8	 ;  35	branch	[length = 1]
  36:main.c        **** 				LineData(data);
  79               		.loc 1 36 0
  80 0036 CE01      		movw r24,r28	 ;  118	*movhi/1	[length = 1]
  81               	.LVL9:
  82 0038 0196      		adiw r24,1	 ;  105	*addhi3/3	[length = 1]
  83 003a 00D0      		rcall LineData	 ;  38	call_insn/2	[length = 1]
  84               	.LVL10:
  37:main.c        **** 				black[RIGHT] = data[RIGHT];
  38:main.c        **** 				black[LEFT] = black[LEFT];
  39:main.c        **** 				start_black = 1;
  85               		.loc 1 39 0
  86 003c 01E0      		ldi r16,lo8(1)	 ;  106	*movhi/5	[length = 2]
  87 003e 10E0      		ldi r17,0
  88 0040 00C0      		rjmp .L2	 ;  129	jump	[length = 1]
  89               	.LVL11:
  90               	.L8:
  20:main.c        **** 		
  91               		.loc 1 20 0
  92 0042 00E0      		ldi r16,0	 ;  104	*movhi/2	[length = 2]
  93 0044 10E0      		ldi r17,0
  94               	.LVL12:
  95               	.L2:
  40:main.c        **** 			}
  41:main.c        **** 		}
  42:main.c        ****        
  43:main.c        **** 		if(data[RIGHT] == data[LEFT] == start_white) {
  96               		.loc 1 43 0
  97 0046 2B81      		ldd r18,Y+3	 ;  47	*movhi/3	[length = 2]
  98 0048 3C81      		ldd r19,Y+4
  99 004a 8981      		ldd r24,Y+1	 ;  48	*movhi/3	[length = 2]
 100 004c 9A81      		ldd r25,Y+2
 101 004e 2817      		cp r18,r24	 ;  49	*cmphi/3	[length = 2]
 102 0050 3907      		cpc r19,r25
 103 0052 01F0      		breq .L3	 ;  50	branch	[length = 1]
  44:main.c        **** 		   MotorDir(FWD,FWD);
 104               		.loc 1 44 0
 105 0054 60E2      		ldi r22,lo8(32)	 ;  52	movqi_insn/2	[length = 1]
 106 0056 80E2      		ldi r24,lo8(32)	 ;  53	movqi_insn/2	[length = 1]
 107 0058 00D0      		rcall MotorDir	 ;  54	call_insn/2	[length = 1]
 108               	.LVL13:
  45:main.c        **** 		   MotorSpeed(85,85);
 109               		.loc 1 45 0
 110 005a 65E5      		ldi r22,lo8(85)	 ;  55	movqi_insn/2	[length = 1]
 111 005c 85E5      		ldi r24,lo8(85)	 ;  56	movqi_insn/2	[length = 1]
 112 005e 00D0      		rcall MotorSpeed	 ;  57	call_insn/2	[length = 1]
 113               	.LVL14:
 114               	.L3:
  46:main.c        **** 		}
  47:main.c        **** 		if(data[RIGHT] == data[LEFT] == start_black) {
 115               		.loc 1 47 0
 116 0060 81E0      		ldi r24,lo8(1)	 ;  107	*movhi/5	[length = 2]
 117 0062 90E0      		ldi r25,0
 118 0064 4B81      		ldd r20,Y+3	 ;  61	*movhi/3	[length = 2]
 119 0066 5C81      		ldd r21,Y+4
 120 0068 2981      		ldd r18,Y+1	 ;  62	*movhi/3	[length = 2]
 121 006a 3A81      		ldd r19,Y+2
 122 006c 4217      		cp r20,r18	 ;  63	*cmphi/3	[length = 2]
 123 006e 5307      		cpc r21,r19
 124 0070 01F0      		breq .L5	 ;  64	branch	[length = 1]
 125 0072 80E0      		ldi r24,0	 ;  108	*movhi/2	[length = 2]
 126 0074 90E0      		ldi r25,0
 127               	.L5:
 128 0076 8017      		cp r24,r16	 ;  67	*cmphi/3	[length = 2]
 129 0078 9107      		cpc r25,r17
 130 007a 01F4      		brne .L6	 ;  68	branch	[length = 1]
  48:main.c        **** 		   GoTurn(0,90,80);
 131               		.loc 1 48 0
 132 007c 40E5      		ldi r20,lo8(80)	 ;  75	movqi_insn/2	[length = 1]
 133 007e 6AE5      		ldi r22,lo8(90)	 ;  76	*movhi/5	[length = 2]
 134 0080 70E0      		ldi r23,0
 135 0082 80E0      		ldi r24,0	 ;  109	*movhi/2	[length = 2]
 136 0084 90E0      		ldi r25,0
 137 0086 00D0      		rcall GoTurn	 ;  78	call_insn/2	[length = 1]
 138               	.LVL15:
 139 0088 00C0      		rjmp .L6	 ;  131	jump	[length = 1]
 140               	.LBE2:
 141               		.cfi_endproc
 142               	.LFE2:
 144               		.text
 145               	.Letext0:
 146               		.file 2 "/usr/lib/avr/include/stdint.h"
 147               		.file 3 "../../libtinyasuro/inc/asuro/sensors.h"
 148               		.file 4 "../../libtinyasuro/inc/asuro/motor.h"
 149               		.file 5 "../../libtinyasuro/inc/asuro/encoder.h"
 150               		.file 6 "../../libtinyasuro/inc/asuro/switches.h"
 151               		.file 7 "../../libtinyasuro/inc/asuro/asuro.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccy4VUya.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccy4VUya.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccy4VUya.s:4      *ABS*:0000003f __SREG__
     /tmp/ccy4VUya.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccy4VUya.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccy4VUya.s:13     .text.startup.main:00000000 main

UNDEFINED SYMBOLS
Init
MotorDir
MotorSpeed
PollSwitch
LineData
GoTurn
