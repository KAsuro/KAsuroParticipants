# Path to the root of the Tiny ASURO Library
TINYASURODIR = ../libtinyasuro

# Include library wide configuration
include $(TINYASURODIR)/Config.mk

# Output format. (can be srec, ihex, binary)
FORMAT = ihex

################################################################################

MBUILDDEPS = $(TINYASURODIR)/Config.mk Makefile

CFLAGS  = -mmcu=$(MCU)
CFLAGS += -DF_CPU=$(F_CPU)
CFLAGS += -DLOW_BAT_THRESHOLD=$(LOW_BAT_THRESHOLD)
CFLAGS += -DBAUD=$(BAUDRATE)
CFLAGS += -ffreestanding
CFLAGS += -nostdlib
CFLAGS += -Wl,-Ttext=$(BOOT_START)
CFLAGS += -Wl,-N
CFLAGS += -Wl,-E

.PHONY: all clean distclean begin gccversion sizebefore sizeafter end

all: begin gccversion sizebefore bootloader.hex sizeafter end

bootloader.hex: bootloader.elf
	avr-objcopy -O $(FORMAT) -j .text -j .data -S bootloader.elf $@

bootloader.elf: bootloader.S compat.inc $(MBUILDDEPS)
	avr-gcc $(CFLAGS) -Wa,-adhlns=bootloader.lst -Wl,-Map=bootloader.map,--cref bootloader.S -o $@

clean: distclean
	rm -f bootloader.hex

distclean:
	rm -f bootloader.elf bootloader.lst bootloader.map


# Eye candy.
# AVR Studio 3.x does not check make's exit code but relies on
# the following magic strings to be generated by the compile job.
begin:
	@echo
	@echo -------- begin --------

end:
	@echo --------  end  --------
	@echo

# Display size of file.
HEXSIZE = avr-size --target=$(FORMAT) bootloader.hex
ELFSIZE = avr-size --mcu=$(MCU) --format=avr bootloader.elf

sizebefore:
	@if test -f bootloader.elf; then echo; echo Size before:; $(ELFSIZE); \
	2>/dev/null; echo; fi

sizeafter:
	@if test -f bootloader.elf; then echo; echo Size after:; $(ELFSIZE); \
	2>/dev/null; echo; fi

# Display compiler version information.
gccversion : 
	avr-gcc --version
